#!/usr/bin/stap
probe begin {
    printf("=============begin============\n")
}

probe process("/lib/x86_64-linux-gnu/libc.so.6").function("malloc").call {
 #   printf("%s pid=%d malloc(%s) 0x%x\r\n", execname(), pid(), $$parms, $bytes)
 #   print_ubacktrace()
}

probe process("/lib/x86_64-linux-gnu/libc.so.6").function("malloc").return {
    if (pid() == target())
    	printf("%s pid=%d return : [0x%x]\n", execname(), pid(), $return);
}


probe process("/lib/x86_64-linux-gnu/libc.so.6").function("free").call {
    #printf("%s pid=%d \n", execname(), pid());
}

probe timer.ms(100000)#500ms later
{
    log("probe exit")
    exit()
}

probe end {
    printf("=============end============\n")
}
# stap -vL 'process("/usr/lib/x86_64-linux-gnu/libc.so.6").function("malloc")'
